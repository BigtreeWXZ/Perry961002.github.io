<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Perry的博客</title>
  
  <subtitle>爱好数学和算法的码农</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-03-12T08:33:08.887Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Perry</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>我的书单（一）</title>
    <link href="http://yoursite.com/2019/03/12/booklist1/"/>
    <id>http://yoursite.com/2019/03/12/booklist1/</id>
    <published>2019-03-12T04:55:19.000Z</published>
    <updated>2019-03-12T08:33:08.887Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>读书带给人的是精神上的富足，会让你在精神得到满足之余，有一种孤独感。</em></strong></p><blockquote><p>大学期间，从大三开始陆陆续续也读了一点书籍，好多也是因为别人的推荐才知道的，也很感激那些推荐者，所以今天也来推荐一下我读过的一些好书！这些书有的是读完的，有的正在读，但都是我觉得还不错的书。</p></blockquote><hr><a id="more"></a><hr><h2 id="一、数学类"><a href="#一、数学类" class="headerlink" title="一、数学类"></a>一、数学类</h2><blockquote><p>数学是自然科学的基础，计算机更是由数学家创造出来的，培养好的数学素养对以后的学习是非常有必要的！</p></blockquote><h3 id="1-代数-–-Artin"><a href="#1-代数-–-Artin" class="headerlink" title="1.代数 – Artin"></a>1.代数 – Artin</h3><p><img src="/imgs/booklist/math/algebra.JPG" alt></p><blockquote><p>这本书是由当代领袖型代数学家与代数儿何学家之一的Atrin写作的，是一本代数学的经典著作，既介绍了矩阵运算、群、向量空间、线性变换、对称等较为基本的内容，又介绍了环、模、域、伽罗瓦理论等较为高深的内容，对于提高数学理解能力、增强对代数的兴趣是非常有益处的。</p></blockquote><h3 id="2-组合数学-–-冯荣权、宋春伟"><a href="#2-组合数学-–-冯荣权、宋春伟" class="headerlink" title="2.组合数学 – 冯荣权、宋春伟"></a>2.组合数学 – 冯荣权、宋春伟</h3><p><img src="/imgs/booklist/math/zhsx.JPG" alt></p><blockquote><p>这本书出自北大数学系教授之手，注重对抽象概念和定理的理解，强调方法的运用以及组合数学在各个领域的应用。因为理论性比较高，所以初步读起来会觉得比较困难，但理解了之后会觉得非常有趣。</p></blockquote><h2 id="二、计算机类"><a href="#二、计算机类" class="headerlink" title="二、计算机类"></a>二、计算机类</h2><h3 id="1-计算机程序的构造和解释"><a href="#1-计算机程序的构造和解释" class="headerlink" title="1.计算机程序的构造和解释"></a>1.计算机程序的构造和解释</h3><p><img src="/imgs/booklist/cs/sicp.JPG" alt></p><blockquote><p>这本书是MIT盛行多年的一本教材，它不仅仅是在教授计算机技术，我觉得里面更多的计算机科学方面的知识，作者使用了简单的函数式语言Scheme带领读者初步探索了精彩绝伦的计算机科学理论的世界！个人觉得是目前读过最精彩的书！</p></blockquote><ul><li>前4章的习题解答我也放在了<a href="https://github.com/Perry961002/SICP" target="_blank" rel="noopener">GitHub</a>上。</li></ul><h3 id="2-算法导论"><a href="#2-算法导论" class="headerlink" title="2.算法导论"></a>2.算法导论</h3><p><img src="/imgs/booklist/cs/algorithm.JPG" alt></p><blockquote><p>不多说，这本书是学习算法的人都有读过的，里面的内容也是非常的丰富，想读懂里面的内容是需要一定的基础的，想读完它更是需要花费大量的时间的。</p></blockquote><ul><li>我的一些算法练习和本书里一些经典算法的实现代码放在了<a href="https://github.com/Perry961002/Algorithms-LeetCode" target="_blank" rel="noopener">这里</a>。</li></ul><h3 id="3-编程珠玑"><a href="#3-编程珠玑" class="headerlink" title="3.编程珠玑"></a>3.编程珠玑</h3><p><img src="/imgs/booklist/cs/pearls.JPG" alt></p><blockquote><p>在书中，作者选取许多具有典型意义的复杂编程和算法问题，生动描绘了历史上众大师们在探索解决方案中发生的轶事、走过的弯路和不断精益求精的历程，引导读者像真正的程序员和软件工程师那样富于创新性地思考，并透彻阐述和总结了许多独特而精妙的设计原则、思考和解决问题的方法以及实用程序设计技巧。解决方案的代码均以C/C++语言编写，不仅有趣，而且有很大的实战示范意义。每章后所附习题极具挑战性和启发性，书末给出了简洁的解答。</p></blockquote><h3 id="4-C-Primer"><a href="#4-C-Primer" class="headerlink" title="4.C++ Primer"></a>4.C++ Primer</h3><p><img src="./" alt></p><blockquote><p>这本是久负盛名的 C++经典教程，深入浅出地为我们讲解了C++11标准里的各种知识和原理，教会我们怎么进行高效的现代C++编程</p></blockquote><h3 id="5-Effective-C"><a href="#5-Effective-C" class="headerlink" title="5.Effective C++"></a>5.Effective C++</h3><p><img src="/imgs/booklist/cs/effective.JPG" alt></p><blockquote><p>这是C++领域的经典大作，与《C++ Primer》的广博不同，这本书只是列出了55个编程准则，但都是非常实用的经验准则，是一本短小精悍的“专家经验积累”</p></blockquote><h3 id="6-统计学习方法"><a href="#6-统计学习方法" class="headerlink" title="6.统计学习方法"></a>6.统计学习方法</h3><p><img src="/imgs/booklist/cs/tjxx.JPG" alt></p><blockquote><p>书中罗列了10个统计学习方法，并且书的厚度相比同类的其他书籍真的很少，适合入门学习。</p></blockquote><h3 id="7-机器学习"><a href="#7-机器学习" class="headerlink" title="7.机器学习"></a>7.机器学习</h3><p><img src="/imgs/booklist/cs/ml.JPG" alt></p><blockquote><p>周志华的经典之作，不做其他介绍。</p></blockquote><hr><blockquote><p><a rel="noopener" href="https://creativecommons.org/licenses/by-nc-sa/3.0/cn/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/3.0/cn/88x31.png"></a><br>本<span xmlns:dct="http://purl.org/dc/terms/" href="http://purl.org/dc/dcmitype/Text" rel="dct:type">文章</span>由<a xmlns:cc="https://creativecommons.org/ns#" href="https://perry96.com" property="cc:attributionName" rel="noopener" target="_blank">Perry</a>创作，采用<a rel="noopener" href="https://creativecommons.org/licenses/by-nc-sa/3.0/cn/" target="_blank">知识共享署名-非商业性使用-相同方式共享 3.0 中国大陆许可协议</a>进行许可。凡是转载的文章，翻译的文章，或者由其他作者投稿的文章，版权归原作者所有。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;&lt;em&gt;读书带给人的是精神上的富足，会让你在精神得到满足之余，有一种孤独感。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;大学期间，从大三开始陆陆续续也读了一点书籍，好多也是因为别人的推荐才知道的，也很感激那些推荐者，所以今天也来推荐一下我读过的一些好书！这些书有的是读完的，有的正在读，但都是我觉得还不错的书。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
    
      <category term="书单" scheme="http://yoursite.com/tags/%E4%B9%A6%E5%8D%95/"/>
    
      <category term="BookList" scheme="http://yoursite.com/tags/BookList/"/>
    
  </entry>
  
  <entry>
    <title>SICP的小练习--Scheme语言实现3个经典的排序算法</title>
    <link href="http://yoursite.com/2019/02/25/scheme-sort/"/>
    <id>http://yoursite.com/2019/02/25/scheme-sort/</id>
    <published>2019-02-25T08:09:54.000Z</published>
    <updated>2019-02-25T09:20:41.435Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、说明"><a href="#一、说明" class="headerlink" title="一、说明"></a>一、说明</h2><blockquote><p>从去年11月份开始了《计算机程序的构造和解释》这本书的学习，开始接触了函数式。学习过程中也对编程有了新的理解，对递归这一程序设计技术也有了更深的掌握。其间为了自娱自乐用Scheme这一小众的函数式语言实现了3个经典排序算法，分别是快速排序、归并排序、堆排序。</p></blockquote><ul><li>目前我已经学习并完成了那本书的前三章的内容和习题，所有的代码也放在了<a href="https://github.com/Perry961002/SICP" target="_blank" rel="noopener">GitHub仓库</a>里，如果有对那本书感兴趣的朋友，可以一起讨论学习。</li></ul><hr><a id="more"></a><hr><h2 id="二、具体算法实现"><a href="#二、具体算法实现" class="headerlink" title="二、具体算法实现"></a>二、具体算法实现</h2><h3 id="1-快速排序"><a href="#1-快速排序" class="headerlink" title="1.快速排序"></a>1.快速排序</h3><h4 id="1-1-算法核心思想"><a href="#1-1-算法核心思想" class="headerlink" title="1.1.算法核心思想"></a>1.1.算法核心思想</h4><ul><li>每次选取第一个元素作为基准，并采用过滤器<code>filter</code>将剩余元素中小于等于基准的作为<code>small</code>部分、剩余元素中大于基准的作为<code>big</code>部分，然后对<code>small</code>和<code>big</code>部分进行快速排序，最后按<code>small-基准-big</code>的顺序组合成新的列表，直到列表中只有一个元素为止.</li></ul><p><img src="/imgs/sicp/quicksort.png" alt></p><h4 id="1-2-完整代码实现"><a href="#1-2-完整代码实现" class="headerlink" title="1.2.完整代码实现"></a>1.2.完整代码实现</h4><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">define</span></span> (<span class="name">quicksort</span> L)</span><br><span class="line">    (<span class="name"><span class="builtin-name">if</span></span> (<span class="name"><span class="builtin-name">null?</span></span> L)</span><br><span class="line">        '()</span><br><span class="line">        (<span class="name"><span class="builtin-name">let</span></span> ((<span class="name">small</span> (<span class="name">quicksort</span> (<span class="name">filter</span> (<span class="name"><span class="builtin-name">lambda</span></span> (x) (<span class="name"><span class="builtin-name">&lt;=</span></span> x (<span class="name"><span class="builtin-name">car</span></span> L)))</span><br><span class="line">                                        (<span class="name"><span class="builtin-name">cdr</span></span> L))))</span><br><span class="line">              (<span class="name">big</span> (<span class="name">quicksort</span> (<span class="name">filter</span> (<span class="name"><span class="builtin-name">lambda</span></span> (x) (<span class="name"><span class="builtin-name">&gt;</span></span> x (<span class="name"><span class="builtin-name">car</span></span> L)))</span><br><span class="line">                                      (<span class="name"><span class="builtin-name">cdr</span></span> L)))))</span><br><span class="line">            (<span class="name"><span class="builtin-name">append</span></span> small (<span class="name"><span class="builtin-name">cons</span></span> (<span class="name"><span class="builtin-name">car</span></span> L) big)))))</span><br></pre></td></tr></table></figure><ul><li><a href="https://github.com/Perry961002/SICP/blob/master/little%20practice/quicksort.scm" target="_blank" rel="noopener">代码文件</a></li></ul><h3 id="2-归并排序"><a href="#2-归并排序" class="headerlink" title="2.归并排序"></a>2.归并排序</h3><h4 id="2-1-算法核心思想"><a href="#2-1-算法核心思想" class="headerlink" title="2.1.算法核心思想"></a>2.1.算法核心思想</h4><ul><li><strong>合并两个列表L1、L2</strong><ul><li>如果<code>L1</code>、<code>L2</code>中有一个为空，则返回另一个.</li><li>否则分别取<code>L1</code>、<code>L2</code>的首元素<code>x1</code>、<code>x2</code><ul><li>如果<code>x1</code>小于等于<code>x2</code>，则将<code>x1</code>作为新列表的首元素，并继续合并<code>L1</code>的剩余部分和<code>L2</code>.</li><li>如果<code>x1</code>大于<code>x2</code>，则将<code>x2</code>作为新列表的首元素，并继续合并<code>L1</code>和<code>L2</code>的剩余部分.</li></ul></li></ul></li></ul><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">define</span></span> (<span class="name">merge</span> L1 L2)</span><br><span class="line">    (<span class="name"><span class="builtin-name">cond</span></span> ((<span class="name"><span class="builtin-name">null?</span></span> L1) L2)</span><br><span class="line">          ((<span class="name"><span class="builtin-name">null?</span></span> L2) L1)</span><br><span class="line">          (<span class="name"><span class="builtin-name">else</span></span></span><br><span class="line">            (<span class="name"><span class="builtin-name">let</span></span> ((<span class="name">x1</span> (<span class="name"><span class="builtin-name">car</span></span> L1)) (<span class="name">x2</span> (<span class="name"><span class="builtin-name">car</span></span> L2)))</span><br><span class="line">                (<span class="name"><span class="builtin-name">if</span></span> (<span class="name"><span class="builtin-name">&lt;=</span></span> x1 x2)</span><br><span class="line">                    (<span class="name"><span class="builtin-name">cons</span></span> x1 (<span class="name">merge</span> (<span class="name"><span class="builtin-name">cdr</span></span> L1) L2))</span><br><span class="line">                    (<span class="name"><span class="builtin-name">cons</span></span> x2 (<span class="name">merge</span> L1 (<span class="name"><span class="builtin-name">cdr</span></span> L2))))))))</span><br></pre></td></tr></table></figure><ul><li><strong>归并排序</strong><ul><li>每次选取列表的头两个元素进行合并然后舍弃，并将合并之后元素放置列表末尾，继续对新列表进行归并排序，直到列表中只有一个元素.</li></ul></li></ul><p><img src="/imgs/sicp/mergesort.png" alt></p><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">define</span></span> (<span class="name">merge-sort</span> L)</span><br><span class="line">    (<span class="name"><span class="builtin-name">define</span></span> (<span class="name">transform</span> x)</span><br><span class="line">        (<span class="name"><span class="builtin-name">if</span></span> (<span class="name"><span class="builtin-name">number?</span></span> x)</span><br><span class="line">            (<span class="name"><span class="builtin-name">list</span></span> x)</span><br><span class="line">            x))</span><br><span class="line">    (<span class="name"><span class="builtin-name">cond</span></span> ((<span class="name"><span class="builtin-name">null?</span></span> L) '())</span><br><span class="line">          ((<span class="name"><span class="builtin-name">=</span></span> (<span class="name"><span class="builtin-name">length</span></span> L) <span class="number">1</span>) (<span class="name"><span class="builtin-name">car</span></span> L))</span><br><span class="line">          (<span class="name"><span class="builtin-name">else</span></span></span><br><span class="line">            (<span class="name"><span class="builtin-name">let</span></span> ((<span class="name">l1</span> (<span class="name">transform</span> (<span class="name"><span class="builtin-name">car</span></span> L)))</span><br><span class="line">                  (<span class="name">l2</span> (<span class="name">transform</span> (<span class="name"><span class="builtin-name">cadr</span></span> L))))</span><br><span class="line">                (<span class="name"><span class="builtin-name">let</span></span> ((<span class="name">new</span> (<span class="name"><span class="builtin-name">list</span></span> (<span class="name">merge</span> l1 l2))))</span><br><span class="line">                    (<span class="name">merge-sort</span> (<span class="name"><span class="builtin-name">append</span></span> (<span class="name">cddr</span> L) new)))))))</span><br></pre></td></tr></table></figure><h4 id="2-2-完整代码实现"><a href="#2-2-完整代码实现" class="headerlink" title="2.2.完整代码实现"></a>2.2.完整代码实现</h4><ul><li><a href="https://github.com/Perry961002/SICP/blob/master/little%20practice/merge-sort.scm" target="_blank" rel="noopener">代码文件</a></li></ul><h3 id="3-推排序"><a href="#3-推排序" class="headerlink" title="3.推排序"></a>3.推排序</h3><h4 id="3-1-算法核心思想"><a href="#3-1-算法核心思想" class="headerlink" title="3.1.算法核心思想"></a>3.1.算法核心思想</h4><ul><li><p><strong>首先将数组映射为一棵完全二叉树</strong></p><p>规则：对于 <code>i</code> 下标位置的元素，它的<code>左孩子</code>下标为 <code>2*i+1</code>，<code>右孩子</code>下标为 <code>2*(i+1)</code>​.</p></li></ul><p><img src="/imgs/sicp/heapa.png" alt></p><ul><li><p><strong>维护一个以root下标为根，末尾下标为len的大根堆</strong></p><p>如果root的两个孩子有比它大的，则将root和那个最大元素交换位置，并对那个子树进行<code>递归</code>维护.</p></li></ul><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">define</span></span> (<span class="name">MaxHeapify</span> heap root len)</span><br><span class="line">    (<span class="name"><span class="builtin-name">define</span></span> (<span class="name">Left</span> i) (<span class="name"><span class="builtin-name">+</span></span> (<span class="name"><span class="builtin-name">*</span></span> i <span class="number">2</span>) <span class="number">1</span>))</span><br><span class="line">    (<span class="name"><span class="builtin-name">define</span></span> (<span class="name">Right</span> i) (<span class="name"><span class="builtin-name">*</span></span> (<span class="name"><span class="builtin-name">+</span></span> i <span class="number">1</span>) <span class="number">2</span>))</span><br><span class="line">    (<span class="name"><span class="builtin-name">let</span></span> ((<span class="name">left</span> (<span class="name">Left</span> root))</span><br><span class="line">          (<span class="name">right</span> (<span class="name">Right</span> root))</span><br><span class="line">          (<span class="name">largest</span> root))</span><br><span class="line">        (<span class="name"><span class="builtin-name">begin</span></span></span><br><span class="line">            (<span class="name"><span class="builtin-name">if</span></span> (<span class="name"><span class="builtin-name">and</span></span> (<span class="name"><span class="builtin-name">&lt;=</span></span> left len)</span><br><span class="line">                     (<span class="name"><span class="builtin-name">&gt;</span></span> (<span class="name"><span class="builtin-name">vector-ref</span></span> heap left)</span><br><span class="line">                        (<span class="name"><span class="builtin-name">vector-ref</span></span> heap root)))</span><br><span class="line">                (<span class="name"><span class="builtin-name">set!</span></span> largest left))</span><br><span class="line">            (<span class="name"><span class="builtin-name">if</span></span> (<span class="name"><span class="builtin-name">and</span></span> (<span class="name"><span class="builtin-name">&lt;=</span></span> right len)</span><br><span class="line">                     (<span class="name"><span class="builtin-name">&gt;</span></span> (<span class="name"><span class="builtin-name">vector-ref</span></span> heap right)</span><br><span class="line">                        (<span class="name"><span class="builtin-name">vector-ref</span></span> heap largest)))</span><br><span class="line">                (<span class="name"><span class="builtin-name">set!</span></span> largest right))</span><br><span class="line">            (<span class="name"><span class="builtin-name">if</span></span> (<span class="name"><span class="builtin-name">not</span></span> (<span class="name"><span class="builtin-name">=</span></span> largest root))</span><br><span class="line">                (<span class="name"><span class="builtin-name">let</span></span> ((<span class="name">head</span> (<span class="name"><span class="builtin-name">vector-ref</span></span> heap root)))</span><br><span class="line">                    (<span class="name"><span class="builtin-name">begin</span></span></span><br><span class="line">                        (<span class="name"><span class="builtin-name">vector-set!</span></span> heap root (<span class="name"><span class="builtin-name">vector-ref</span></span> heap largest))</span><br><span class="line">                        (<span class="name"><span class="builtin-name">vector-set!</span></span> heap largest head)</span><br><span class="line">                        (<span class="name">MaxHeapify</span> heap largest len)))))))</span><br></pre></td></tr></table></figure><ul><li><p><strong>初始化大根堆</strong></p><p>从堆中的<code>最后一个有孩子</code>的节点开始<code>从右向左</code>、<code>从下向上</code>，以每个节点为根<code>维护一个大根堆</code>.</p></li></ul><p><img src="/imgs/sicp/heapb.png" alt></p><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">define</span></span> (<span class="name">BuildMaxHeap</span> heap)</span><br><span class="line">    (<span class="name"><span class="builtin-name">define</span></span> (<span class="name">build-iter</span> i)</span><br><span class="line">        (<span class="name"><span class="builtin-name">if</span></span> (<span class="name"><span class="builtin-name">&gt;=</span></span> i <span class="number">0</span>)</span><br><span class="line">            (<span class="name"><span class="builtin-name">begin</span></span></span><br><span class="line">                (<span class="name">MaxHeapify</span> heap i (<span class="name"><span class="builtin-name">-</span></span> (<span class="name"><span class="builtin-name">vector-length</span></span> heap) <span class="number">1</span>))</span><br><span class="line">                (<span class="name">build-iter</span> (<span class="name"><span class="builtin-name">-</span></span> i <span class="number">1</span>)))))</span><br><span class="line">    (<span class="name">build-iter</span> (<span class="name"><span class="builtin-name">-</span></span> (<span class="name">div</span> (<span class="name"><span class="builtin-name">vector-length</span></span> heap) <span class="number">2</span>) <span class="number">1</span>)))</span><br></pre></td></tr></table></figure><ul><li><p><strong>堆排序</strong></p><p>从初始的大根堆开始，每次将<code>0下标</code>位置和<code>len下标</code>位置的元素交换，并<code>len := len-1</code>，然后继续对0到<code>len</code>位置的元素进行堆排序，直到<code>len = 0</code>.</p></li></ul><p><img src="/imgs/sicp/heapc.png" alt></p><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">define</span></span> (<span class="name">HeapSort</span> heap)</span><br><span class="line">    (<span class="name"><span class="builtin-name">define</span></span> (<span class="name">sort-iter</span> i)</span><br><span class="line">        (<span class="name"><span class="builtin-name">if</span></span> (<span class="name"><span class="builtin-name">&gt;=</span></span> i <span class="number">1</span>)</span><br><span class="line">            (<span class="name"><span class="builtin-name">let</span></span> ((<span class="name"><span class="builtin-name">max</span></span> (<span class="name"><span class="builtin-name">vector-ref</span></span> heap <span class="number">0</span>)))</span><br><span class="line">                (<span class="name"><span class="builtin-name">begin</span></span></span><br><span class="line">                    (<span class="name"><span class="builtin-name">vector-set!</span></span> heap <span class="number">0</span> (<span class="name"><span class="builtin-name">vector-ref</span></span> heap i))</span><br><span class="line">                    (<span class="name"><span class="builtin-name">vector-set!</span></span> heap i max)</span><br><span class="line">                    (<span class="name">MaxHeapify</span> heap <span class="number">0</span> (<span class="name"><span class="builtin-name">-</span></span> i <span class="number">1</span>))</span><br><span class="line">                    (<span class="name">sort-iter</span> (<span class="name"><span class="builtin-name">-</span></span> i <span class="number">1</span>))))))</span><br><span class="line">    (<span class="name">BuildMaxHeap</span> heap)</span><br><span class="line">    (<span class="name">sort-iter</span> (<span class="name"><span class="builtin-name">-</span></span> (<span class="name"><span class="builtin-name">vector-length</span></span> heap) <span class="number">1</span>))</span><br><span class="line">    heap)</span><br></pre></td></tr></table></figure><h4 id="3-2-完整代码实现"><a href="#3-2-完整代码实现" class="headerlink" title="3.2.完整代码实现"></a>3.2.完整代码实现</h4><ul><li><a href="https://github.com/Perry961002/SICP/blob/master/little%20practice/HeapSort.scm" target="_blank" rel="noopener">代码文件</a></li></ul><hr><blockquote><p><a rel="noopener" href="https://creativecommons.org/licenses/by-nc-sa/3.0/cn/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/3.0/cn/88x31.png"></a><br>本<span xmlns:dct="http://purl.org/dc/terms/" href="http://purl.org/dc/dcmitype/Text" rel="dct:type">文章</span>由<a xmlns:cc="https://creativecommons.org/ns#" href="https://perry96.com" property="cc:attributionName" rel="noopener" target="_blank">Perry</a>创作，采用<a rel="noopener" href="https://creativecommons.org/licenses/by-nc-sa/3.0/cn/" target="_blank">知识共享署名-非商业性使用-相同方式共享 3.0 中国大陆许可协议</a>进行许可。凡是转载的文章，翻译的文章，或者由其他作者投稿的文章，版权归原作者所有。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、说明&quot;&gt;&lt;a href=&quot;#一、说明&quot; class=&quot;headerlink&quot; title=&quot;一、说明&quot;&gt;&lt;/a&gt;一、说明&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;从去年11月份开始了《计算机程序的构造和解释》这本书的学习，开始接触了函数式。学习过程中也对编程有了新的理解，对递归这一程序设计技术也有了更深的掌握。其间为了自娱自乐用Scheme这一小众的函数式语言实现了3个经典排序算法，分别是快速排序、归并排序、堆排序。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;目前我已经学习并完成了那本书的前三章的内容和习题，所有的代码也放在了&lt;a href=&quot;https://github.com/Perry961002/SICP&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub仓库&lt;/a&gt;里，如果有对那本书感兴趣的朋友，可以一起讨论学习。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
    
    </summary>
    
    
      <category term="Scheme" scheme="http://yoursite.com/tags/Scheme/"/>
    
      <category term="函数式" scheme="http://yoursite.com/tags/%E5%87%BD%E6%95%B0%E5%BC%8F/"/>
    
      <category term="SICP" scheme="http://yoursite.com/tags/SICP/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>利用Github和Hexo搭建Yilia主题的博客</title>
    <link href="http://yoursite.com/2019/02/21/hexo-yilia/"/>
    <id>http://yoursite.com/2019/02/21/hexo-yilia/</id>
    <published>2019-02-21T13:21:14.000Z</published>
    <updated>2019-02-23T18:43:41.639Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、说明"><a href="#一、说明" class="headerlink" title="一、说明"></a>一、说明</h2><blockquote><p>前面几天时间利用Github和Hexo搭建Yilia主题的博客，过程中也踩了很多的坑，现在也到了填坑的时候了。</p><p>废话不多说，现在正式开始教程吧。</p></blockquote><hr><a id="more"></a><hr><h3 id="1-基本软件安装"><a href="#1-基本软件安装" class="headerlink" title="1.基本软件安装"></a>1.基本软件安装</h3><ul><li><p>首先我们需要从<a href="http://nodejs.cn/download/" target="_blank" rel="noopener">Node.js官网</a>下载并安装这个软件。</p><p>安装成功之后我们在cmd窗口中输入命令：<code>node --version</code>，如果可以得到相对应的版本号则说明安装成功，否则请将安装目录添加到PATH环境变量中。</p></li><li><p>另外我们还需要安装Git，并且还需要配置与Github的SSH Key，需要的话可以参考我的上一篇<a href="https://perry96.com/2019/02/21/git-github/" target="_blank" rel="noopener">文章</a>。</p></li></ul><h3 id="2-创建Github仓库"><a href="#2-创建Github仓库" class="headerlink" title="2.创建Github仓库"></a>2.创建Github仓库</h3><ul><li><p>登录GitHub后我们新建一个名为<code>userName.github.io</code>的仓库，<code>userName</code>就是你账户的名字。</p><p>建好之后打开这个仓库的<code>Settings</code>页面，在<code>GitHub Pages</code>我们可以看到类似于这样的显示：</p><p><img src="/imgs/hexo/gitpage.JPG" alt></p><p>这里绿色区域显示的网址就是我们博客的网址，因为这个网址有点长，资金允许的话我们可以将它绑定到自己申请的域名，这将在后面进行介绍。</p></li></ul><h2 id="二、Hexo的安装和一些基本命令、配置"><a href="#二、Hexo的安装和一些基本命令、配置" class="headerlink" title="二、Hexo的安装和一些基本命令、配置"></a>二、Hexo的安装和一些基本命令、配置</h2><h3 id="1-安装Hexo"><a href="#1-安装Hexo" class="headerlink" title="1.安装Hexo"></a>1.安装Hexo</h3><ul><li><p>打开cmd窗口，运行命令：<code>npm install -g hexo</code>进行安装。</p></li><li><p>初始化Hexo：新建一个名为<code>blog</code>的文件夹，在<code>PowerShell</code>窗口中运行命令<code>hexo init</code>。</p><p>重新打开文件夹之后我们发现多出了这样一些文件</p><p><img src="/imgs/hexo/hexo.JPG" alt></p><ul><li><p>source文件夹：这里存放的是博客所有的资源文件，书写文章的Markdown文件存放在_posts子文件夹中，文章的图片资料可以新建imgs文件夹并存放。</p></li><li><p>themes文件夹：这里存放的是博客的主题文件，其中的<code>landspace</code>是默认的主题文件，之后我们更换的<code>Yilia</code>主题文件也将存放在这里。</p></li><li><p>_config.yml文件：这是博客的一些基本配置记录，我们后面将对它进行更改。</p></li></ul></li></ul><h3 id="2-基本配置"><a href="#2-基本配置" class="headerlink" title="2.基本配置"></a>2.基本配置</h3><p>打开<code>_config.yml</code>文件进行配置</p><ul><li><p>基本信息展示：</p><p><img src="/imgs/hexo/site.JPG" alt></p></li><li><p>部署方式配置</p><p><img src="/imgs/hexo/deploy.JPG" alt></p></li></ul><p>关于头像和站点图标的更换将在更换主题之后进行。</p><h3 id="3-基本命令"><a href="#3-基本命令" class="headerlink" title="3.基本命令"></a>3.基本命令</h3><ul><li><p>生成静态页面：<code>hexo g</code>。</p></li><li><p>启动本地服务器：<code>hexo s</code>。</p><ul><li><p>默认的端口号是<code>4000</code>，如果冲突的话可以通过命令<code>hexo s -p5000</code>更换指定的端口号。</p></li><li><p>之后我们就可以在浏览器中访问<code>http://localhost:4000</code>查看自己的博客情况。</p></li></ul></li><li><p>新建文章：运行命令<code>hexo new &quot;xxxx&quot;</code>，在<code>source\_posts</code>文件夹生成新的Markdown文件，后面就可以在这个文件上完成自己的文章。</p></li><li><p>部署到GitHub：在搭建完博客或者写完文章之后我们需要把它们部署到GitHub上供人浏览。我们<code>依次</code>运行下面的两条命令完成：</p><blockquote><p>hexo clean</p><p>hexo d -g</p></blockquote></li></ul><h2 id="三、更换Yilia主题及它的基本配置"><a href="#三、更换Yilia主题及它的基本配置" class="headerlink" title="三、更换Yilia主题及它的基本配置"></a>三、更换Yilia主题及它的基本配置</h2><h3 id="1-更换主题"><a href="#1-更换主题" class="headerlink" title="1.更换主题"></a>1.更换主题</h3><p>之前说过的，我们可以将下载好的主题文件放在<code>themes</code>文件夹里进行主题更换。<a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="noopener">这里</a>提供了很多别人开发好的主题，我使用的是<a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">Yilia主题</a>。下面具体说说怎么更换：</p><ul><li><p>在<code>themes</code>文件夹下打开Git Bash，运行<code>git clone git@github.com:litten/hexo-theme-yilia.git</code>。</p></li><li><p>打开<code>blog</code>文件夹下的<code>_config.yml</code>文件，将其中的<code>theme</code>属性的值改为刚刚下好的文件名即可。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">hexo-theme-yilia</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="2-基本配置-1"><a href="#2-基本配置-1" class="headerlink" title="2.基本配置"></a>2.基本配置</h3><h4 id="2-1-更换头像和站点图标"><a href="#2-1-更换头像和站点图标" class="headerlink" title="2.1.更换头像和站点图标"></a>2.1.更换头像和站点图标</h4><ul><li><p>打开文件夹<code>themes\hexo-theme-yilia\source\img</code>，将头像、站点图标以及两个打赏二维码图片放在这里。</p><p><img src="/imgs/hexo/theme.JPG" alt></p></li><li><p>打开主题文件夹下的<code>_config.yml</code>文件，并对<code>avatar</code>和<code>favicon</code>做如下更改：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">favicon:</span> <span class="string">/img/favicon.jpg</span></span><br><span class="line"><span class="attr">avatar:</span> <span class="string">/img/avatar.jpg</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-2-配置打赏图片"><a href="#2-2-配置打赏图片" class="headerlink" title="2.2.配置打赏图片"></a>2.2.配置打赏图片</h4><ul><li><p>还是对<code>_config.yml</code>文件进行修改：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 支付宝二维码图片地址，跟你设置头像的方式一样</span></span><br><span class="line"><span class="attr">alipay:</span> <span class="string">/img/alipay.jpg</span></span><br><span class="line"><span class="comment"># 微信二维码图片地址</span></span><br><span class="line"><span class="attr">weixin:</span> <span class="string">/img/weixin.jpg</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-3-标签功能缺失模块的补充"><a href="#2-3-标签功能缺失模块的补充" class="headerlink" title="2.3.标签功能缺失模块的补充"></a>2.3.标签功能缺失模块的补充</h4><ul><li><p>在<code>blog</code>文件夹下执行命令：<code>npm i hexo-generator-json-content --save</code></p></li><li><p>在<code>blog</code>文件夹中的<code>_config.yml</code>文件末尾添加代码：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jsonContent:</span></span><br><span class="line"><span class="attr">    meta:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    pages:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    posts:</span></span><br><span class="line"><span class="attr">      title:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">      date:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">      path:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">      text:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">      raw:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">      content:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">      slug:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">      updated:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">      comments:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">      link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">      permalink:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">      excerpt:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">      categories:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">      tags:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-4-百度统计设置"><a href="#2-4-百度统计设置" class="headerlink" title="2.4.百度统计设置"></a>2.4.百度统计设置</h4><p><a href="https://tongji.baidu.com/web/welcome/login" target="_blank" rel="noopener">百度统计官网</a></p><ul><li><p>注册完之后点击新增网站，前面的两个值填写的是GitHub为我们生成的网址即可</p><p><img src="/imgs/hexo/bdtjnew.JPG" alt></p></li><li><p>在代码获取页面复制官方生成的代码</p><p><img src="/imgs/hexo/bdcode.JPG" alt></p></li><li><p>将复制的代码添加到目录<code>hexo-theme-yilia\layout\_partial</code>中的baidu_tongji.ejs中，格式为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (theme.baidu_tongji) &#123; %&gt;</span><br><span class="line"># 你刚复制的所有代码</span><br></pre></td></tr></table></figure></li><li><p>打开主题目录下的<code>_config.yml</code>文件，将其中的<code>baidu_analytics</code>的值修改为统计代码中<code>hm.src</code>值的’<strong>?</strong>‘之后一段字符。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Miscellaneous</span></span><br><span class="line"><span class="attr">baidu_analytics:</span> <span class="string">'0f94e44d75ef0e72600xxxxxxxxxxxxx'</span></span><br><span class="line"><span class="attr">google_analytics:</span> <span class="string">''</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-5-其他一些链接更改"><a href="#2-5-其他一些链接更改" class="headerlink" title="2.5.其他一些链接更改"></a>2.5.其他一些链接更改</h4><ul><li><p>这里主要是我对主题里一些链接的更改：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># SubNav</span></span><br><span class="line"><span class="attr">subnav:</span></span><br><span class="line"><span class="attr">  github:</span> <span class="string">"https://github.com/Perry961002"</span></span><br><span class="line"><span class="attr">  weibo:</span> <span class="string">"#"</span></span><br><span class="line"><span class="attr">  rss:</span> <span class="string">"#"</span></span><br><span class="line"><span class="attr">  mail:</span> <span class="string">"mailto:Perry961002@163.com"</span></span><br><span class="line">  </span><br><span class="line"> <span class="comment">#友情链接</span></span><br><span class="line"><span class="attr">friends:</span></span><br><span class="line">  <span class="string">Github官网:</span> <span class="attr">https://github.com/</span></span><br><span class="line">  <span class="string">Markdown编辑器Typora:</span> <span class="attr">https://www.typora.io/</span></span><br><span class="line">  <span class="string">阿里云:</span> <span class="attr">https://www.aliyun.com/</span></span><br><span class="line">  <span class="string">VSCode官网:</span> <span class="attr">https://code.visualstudio.com/</span></span><br><span class="line">  <span class="string">LeetCode中国:</span> <span class="attr">https://leetcode-cn.com/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#自我展示</span></span><br><span class="line"><span class="attr">aboutme:</span> <span class="string">爱好数学和算法的码农&lt;br&gt;&lt;br&gt;喜欢乒乓球的吃货。。。</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="四、博客进阶功能设置"><a href="#四、博客进阶功能设置" class="headerlink" title="四、博客进阶功能设置"></a>四、博客进阶功能设置</h2><h3 id="1-网站访问量和文章阅读量统计"><a href="#1-网站访问量和文章阅读量统计" class="headerlink" title="1.网站访问量和文章阅读量统计"></a>1.网站访问量和文章阅读量统计</h3><ul><li><p>这里我使用的是<a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="noopener">不蒜子</a>提供的插件</p></li><li><p>打开目录<code>hexo-theme-yilia\layout\_partial</code>下的<code>footer.ejs</code>文件，在末尾添加代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>还是在<code>footer.ejs</code>文件中，在<code>footer-left</code>和<code>footer-right</code>标签之间添加代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;</span><br><span class="line">本站总访问量&lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次</span><br><span class="line">&lt;/span&gt;</span><br><span class="line">&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;</span><br><span class="line">本站访客数&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;人次</span><br><span class="line">&lt;/span&gt;</span><br></pre></td></tr></table></figure></li><li><p>打开同目录下的<code>article.ejs</code>文件，在<code>&lt;%- partial(&#39;post/title&#39;, {class_name: &#39;article-title&#39;}) %&gt;</code>一行下添加代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 显示阅读和评论数 --&gt;</span><br><span class="line">&lt;% if (!index)&#123; %&gt;</span><br><span class="line">  &lt;br/&gt;</span><br><span class="line">  &lt;a class=&quot;cloud-tie-join-count&quot; href=&quot;javascript:void(0);&quot; style=&quot;color:gray;font-size:14px;&quot;&gt;</span><br><span class="line">  &lt;span class=&quot;icon-sort&quot;&gt;&lt;/span&gt;</span><br><span class="line">  &lt;span id=&quot;busuanzi_container_page_pv&quot; style=&quot;color:#ef7522;font-size:14px;&quot;&gt;</span><br><span class="line">            本文阅读量: &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt;次 &amp;nbsp;&amp;nbsp;</span><br><span class="line">  &lt;/span&gt;</span><br><span class="line">  &lt;/a&gt;</span><br></pre></td></tr></table></figure></li><li><p>效果：</p><p>网站访问量：</p><p><img src="/imgs/hexo/footer.JPG" alt></p><p>文章阅读量：</p><p><img src="/imgs/hexo/article.JPG" alt></p></li></ul><h3 id="2-评论功能配置"><a href="#2-评论功能配置" class="headerlink" title="2.评论功能配置"></a>2.评论功能配置</h3><ul><li><p>在主题目录下的<code>_config.yml</code>文件中我们发现作者提供了多种方式来实现评论功能，但因为一些原因很多方式已经不能使用，这里我采用了<code>Gitment</code>评论功能。</p></li><li><p>Gitment是使用的GitHub Issues<strong>作为评论系统</strong>。</p></li></ul><h4 id="2-1-在GitHub上创建OAuth-Apps"><a href="#2-1-在GitHub上创建OAuth-Apps" class="headerlink" title="2.1.在GitHub上创建OAuth Apps"></a>2.1.在GitHub上创建OAuth Apps</h4><ul><li><p>登录自己的Github，进入<code>Settings--Developer settings</code>页面，点击<code>New OAuth App</code></p><p><img src="/imgs/hexo/oauth.JPG" alt></p><ul><li><p>这里<code>name</code>可以随便写，<code>Homepage URL</code>填GitHub提供的网址</p></li><li><p>如果博客绑定的域名，callback URL就需要使用绑定域名，否则和上面一样，最后确定即可。</p></li></ul><p>完成之后可以得到</p><p><img src="/imgs/hexo/client.JPG" alt></p></li></ul><h4 id="2-2-配置-config-yml文件"><a href="#2-2-配置-config-yml文件" class="headerlink" title="2.2.配置_config.yml文件"></a>2.2.配置_config.yml文件</h4><ul><li><p>打开主题目录下的<code>_config.yml</code>文件，做下面的修改</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#5、Gitment</span></span><br><span class="line"><span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">gitment_owner:</span> <span class="string">Perry961002</span>      <span class="comment">#你的 GitHub ID</span></span><br><span class="line"><span class="attr">gitment_repo:</span> <span class="string">'perry961002.github.io'</span>          <span class="comment">#存储评论的 repo</span></span><br><span class="line"><span class="attr">gitment_oauth:</span></span><br><span class="line"><span class="attr">  client_id:</span> <span class="string">'e686axxxxxxxxx'</span>           <span class="comment">#client ID</span></span><br><span class="line"><span class="attr">  client_secret:</span> <span class="string">'aea668xxxxxxxxxx'</span>       <span class="comment">#client secret</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-3-配置Gitment的中文显示、解决Validation-Failed错误"><a href="#2-3-配置Gitment的中文显示、解决Validation-Failed错误" class="headerlink" title="2.3.配置Gitment的中文显示、解决Validation Failed错误"></a>2.3.配置Gitment的中文显示、解决Validation Failed错误</h4><ul><li><p>打开目录<code>hexo-theme-yilia\layout\_partial\post</code>下的<code>gitment.ejs</code>文件，将2、3两行修改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://billts.site/extra_css/gitment.css&quot;&gt;</span><br><span class="line">&lt;script src=&quot;https://billts.site/js/gitment.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>将id属性的值修改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id: &quot;&lt;%= page.date %&gt;&quot;</span><br></pre></td></tr></table></figure></li></ul><h4 id="最终效果："><a href="#最终效果：" class="headerlink" title="最终效果："></a>最终效果：</h4><p><img src="/imgs/hexo/gitment.JPG" alt></p><h3 id="3-文章目录功能"><a href="#3-文章目录功能" class="headerlink" title="3.文章目录功能"></a>3.文章目录功能</h3><ul><li><p>打开目录<code>hexo-theme-yilia\source</code>下的<code>main.0cf68a.css</code>文件(这里文件名中间的那一段编号可能不一样)，添加下面的代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 新添加的 */</span></span><br><span class="line"><span class="selector-id">#container</span> <span class="selector-class">.show-toc-btn</span>,<span class="selector-id">#container</span> <span class="selector-class">.toc-article</span>&#123;<span class="attribute">display</span>:block&#125;</span><br><span class="line"><span class="selector-class">.toc-article</span>&#123;<span class="attribute">z-index</span>:<span class="number">100</span>;<span class="attribute">background</span>:<span class="number">#fff</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#ccc</span>;<span class="attribute">max-width</span>:<span class="number">250px</span>;<span class="attribute">min-width</span>:<span class="number">150px</span>;<span class="attribute">max-height</span>:<span class="number">500px</span>;<span class="attribute">overflow-y</span>:auto;<span class="attribute">-webkit-box-shadow</span>:<span class="number">5px</span> <span class="number">5px</span> <span class="number">2px</span> <span class="number">#ccc</span>;<span class="attribute">box-shadow</span>:<span class="number">5px</span> <span class="number">5px</span> <span class="number">2px</span> <span class="number">#ccc</span>;<span class="attribute">font-size</span>:<span class="number">12px</span>;<span class="attribute">padding</span>:<span class="number">10px</span>;<span class="attribute">position</span>:fixed;<span class="attribute">right</span>:<span class="number">35px</span>;<span class="attribute">top</span>:<span class="number">129px</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc-close</span>&#123;<span class="attribute">font-weight</span>:<span class="number">700</span>;<span class="attribute">font-size</span>:<span class="number">20px</span>;<span class="attribute">cursor</span>:pointer;<span class="attribute">float</span>:right;<span class="attribute">color</span>:<span class="number">#ccc</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc-close</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">color</span>:<span class="number">#000</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc</span>&#123;<span class="attribute">font-size</span>:<span class="number">12px</span>;<span class="attribute">padding</span>:<span class="number">0</span>;<span class="attribute">line-height</span>:<span class="number">20px</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc</span> <span class="selector-class">.toc-number</span>&#123;<span class="attribute">color</span>:<span class="number">#333</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc</span> <span class="selector-class">.toc-text</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">text-decoration</span>:underline;<span class="attribute">color</span>:<span class="number">#2a6496</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-tag">li</span>&#123;<span class="attribute">list-style-type</span>:none&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc-level-1</span>&#123;<span class="attribute">margin</span>:<span class="number">4px</span> <span class="number">0</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc-child</span>&#123;&#125;@-<span class="keyword">moz</span>-<span class="keyword">keyframes</span> cd-bounce-<span class="number">1</span>&#123;0%&#123;<span class="attribute">opacity</span>:<span class="number">0</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;60%&#123;<span class="attribute">opacity</span>:<span class="number">1</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1.01)&#125;100%&#123;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;&#125;@-<span class="keyword">webkit</span>-<span class="keyword">keyframes</span> cd-bounce-<span class="number">1</span>&#123;0%&#123;<span class="attribute">opacity</span>:<span class="number">0</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;60%&#123;<span class="attribute">opacity</span>:<span class="number">1</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1.01)&#125;100%&#123;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;&#125;@-<span class="keyword">o</span>-<span class="keyword">keyframes</span> cd-bounce-<span class="number">1</span>&#123;0%&#123;<span class="attribute">opacity</span>:<span class="number">0</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;60%&#123;<span class="attribute">opacity</span>:<span class="number">1</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1.01)&#125;100%&#123;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;&#125;@<span class="keyword">keyframes</span> cd-bounce-<span class="number">1</span>&#123;0%&#123;<span class="attribute">opacity</span>:<span class="number">0</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;60%&#123;<span class="attribute">opacity</span>:<span class="number">1</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1.01)&#125;100%&#123;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;&#125;<span class="selector-class">.show-toc-btn</span>&#123;<span class="attribute">display</span>:none;<span class="attribute">z-index</span>:<span class="number">10</span>;<span class="attribute">width</span>:<span class="number">30px</span>;<span class="attribute">min-height</span>:<span class="number">14px</span>;<span class="attribute">overflow</span>:hidden;<span class="attribute">padding</span>:<span class="number">4px</span> <span class="number">6px</span> <span class="number">8px</span> <span class="number">5px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#ddd</span>;<span class="attribute">border-right</span>:none;<span class="attribute">position</span>:fixed;<span class="attribute">right</span>:<span class="number">40px</span>;<span class="attribute">text-align</span>:center;<span class="attribute">background-color</span>:<span class="number">#f9f9f9</span>&#125;<span class="selector-class">.show-toc-btn</span> <span class="selector-class">.btn-bg</span>&#123;<span class="attribute">margin-top</span>:<span class="number">2px</span>;<span class="attribute">display</span>:block;<span class="attribute">width</span>:<span class="number">16px</span>;<span class="attribute">height</span>:<span class="number">14px</span>;<span class="attribute">background</span>:<span class="built_in">url</span>(http://7xtawy.com1.z0.glb.clouddn.com/show.png) no-repeat;<span class="attribute">-webkit-background-size</span>:<span class="number">100%</span>;<span class="attribute">-moz-background-size</span>:<span class="number">100%</span>;<span class="attribute">background-size</span>:<span class="number">100%</span>&#125;<span class="selector-class">.show-toc-btn</span> <span class="selector-class">.btn-text</span>&#123;<span class="attribute">color</span>:<span class="number">#999</span>;<span class="attribute">font-size</span>:<span class="number">12px</span>&#125;<span class="selector-class">.show-toc-btn</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">cursor</span>:pointer&#125;<span class="selector-class">.show-toc-btn</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.btn-bg</span>&#123;<span class="attribute">background-position</span>:<span class="number">0</span> -<span class="number">16px</span>&#125;<span class="selector-class">.show-toc-btn</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.btn-text</span>&#123;<span class="attribute">font-size</span>:<span class="number">12px</span>;<span class="attribute">color</span>:<span class="number">#ea8010</span>&#125;</span><br><span class="line"><span class="selector-class">.toc-article</span> <span class="selector-tag">li</span> <span class="selector-tag">ol</span>, <span class="selector-class">.toc-article</span> <span class="selector-tag">li</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.toc-article</span> <span class="selector-tag">ol</span>, <span class="selector-class">.toc-article</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>打开目录<code>hexo-theme-yilia\layout\_partial</code>下的<code>article.ejs</code>文件，在<code>&lt;/header&gt; &lt;% } %&gt;</code>下添加代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 目录内容 --&gt;</span><br><span class="line">&lt;% if (!index &amp;&amp; post.toc)&#123; %&gt;</span><br><span class="line">    &lt;p class=&quot;show-toc-btn&quot; id=&quot;show-toc-btn&quot; onclick=&quot;showToc();&quot; style=&quot;display:none&quot;&gt;</span><br><span class="line">          &lt;span class=&quot;btn-bg&quot;&gt;&lt;/span&gt;</span><br><span class="line">          &lt;span class=&quot;btn-text&quot;&gt;文章导航&lt;/span&gt;</span><br><span class="line">          &lt;/p&gt;</span><br><span class="line">&lt;div id=&quot;toc-article&quot; class=&quot;toc-article&quot;&gt;</span><br><span class="line">    &lt;span id=&quot;toc-close&quot; class=&quot;toc-close&quot; title=&quot;隐藏导航&quot; onclick=&quot;showBtn();&quot;&gt;×&lt;/span&gt;</span><br><span class="line">&lt;strong class=&quot;toc-title&quot;&gt;文章目录&lt;/strong&gt;</span><br><span class="line">           &lt;%- toc(post.content) %&gt;</span><br><span class="line">         &lt;/div&gt;</span><br><span class="line">   &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">function showToc()&#123;</span><br><span class="line">var toc_article = document.getElementById(&quot;toc-article&quot;);</span><br><span class="line">var show_toc_btn = document.getElementById(&quot;show-toc-btn&quot;);</span><br><span class="line">toc_article.setAttribute(&quot;style&quot;,&quot;display:block&quot;);</span><br><span class="line">show_toc_btn.setAttribute(&quot;style&quot;,&quot;display:none&quot;);</span><br><span class="line">&#125;;</span><br><span class="line">function showBtn()&#123;</span><br><span class="line">var toc_article = document.getElementById(&quot;toc-article&quot;);</span><br><span class="line">var show_toc_btn = document.getElementById(&quot;show-toc-btn&quot;);</span><br><span class="line">toc_article.setAttribute(&quot;style&quot;,&quot;display:none&quot;);</span><br><span class="line">show_toc_btn.setAttribute(&quot;style&quot;,&quot;display:block&quot;);</span><br><span class="line">&#125;;</span><br><span class="line">   &lt;/script&gt;</span><br><span class="line">      &lt;% &#125; %&gt;</span><br><span class="line">&lt;!-- 目录内容结束 --&gt;</span><br></pre></td></tr></table></figure></li><li><p>需要注意的是：如果想在页面中显示目录，要在文章的Markdown的开头加入<code>toc: true</code>这样一句话。</p></li></ul><p><strong>效果：</strong></p><p><img src="/imgs/hexo/toc.JPG" alt></p><h2 id="五、绑定域名"><a href="#五、绑定域名" class="headerlink" title="五、绑定域名"></a>五、绑定域名</h2><h3 id="1-购买域名"><a href="#1-购买域名" class="headerlink" title="1.购买域名"></a>1.购买域名</h3><ul><li>首先需要在<a href="https://aliyun.com" target="_blank" rel="noopener">阿里云</a>的域名模块购买属于自己的域名，我这里使用的是<code>.com</code>结尾的域名，加入云解析服务，第一年支付了<code>73.36人民币</code>。</li></ul><h3 id="2-域名解析"><a href="#2-域名解析" class="headerlink" title="2.域名解析"></a>2.域名解析</h3><ul><li>点开解析设置页面，添加两个记录，<code>记录类型</code>选<code>CNAME</code>，<code>主机记录</code>分别写<code>@</code>和<code>www</code>，<code>记录值</code>填GitHub生成的网址</li><li>在博客目录下的<code>source</code>文件夹下新建名为<code>CNAME</code>的文件，将域名信息写入并保存，比如我的就是填<code>perry96.com</code>。稍等几分钟之后就可以通过访问域名来访问自己的博客。</li></ul><hr><blockquote><p><a rel="noopener" href="https://creativecommons.org/licenses/by-nc-sa/3.0/cn/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/3.0/cn/88x31.png"></a><br>本<span xmlns:dct="http://purl.org/dc/terms/" href="http://purl.org/dc/dcmitype/Text" rel="dct:type">文章</span>由<a xmlns:cc="https://creativecommons.org/ns#" href="https://perry96.com" property="cc:attributionName" rel="noopener" target="_blank">Perry</a>创作，采用<a rel="noopener" href="https://creativecommons.org/licenses/by-nc-sa/3.0/cn/" target="_blank">知识共享署名-非商业性使用-相同方式共享 3.0 中国大陆许可协议</a>进行许可。凡是转载的文章，翻译的文章，或者由其他作者投稿的文章，版权归原作者所有。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、说明&quot;&gt;&lt;a href=&quot;#一、说明&quot; class=&quot;headerlink&quot; title=&quot;一、说明&quot;&gt;&lt;/a&gt;一、说明&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;前面几天时间利用Github和Hexo搭建Yilia主题的博客，过程中也踩了很多的坑，现在也到了填坑的时候了。&lt;/p&gt;
&lt;p&gt;废话不多说，现在正式开始教程吧。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
    
      <category term="Github" scheme="http://yoursite.com/tags/Github/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="Yilia" scheme="http://yoursite.com/tags/Yilia/"/>
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Git和Github初次使用及配置</title>
    <link href="http://yoursite.com/2019/02/21/git-github/"/>
    <id>http://yoursite.com/2019/02/21/git-github/</id>
    <published>2019-02-21T03:26:58.000Z</published>
    <updated>2019-02-23T18:40:00.215Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、简单介绍"><a href="#一、简单介绍" class="headerlink" title="一、简单介绍"></a>一、简单介绍</h2><ul><li><p>Git是一个开源的分布式版本控制系统，它可以很高效地进行项目版本管理。</p></li><li><p>Github是一个只支持Git作为唯一版本管理工具的面向开源和私有软件项目的托管平台。</p></li></ul><hr><a id="more"></a><hr><h2 id="二、Git安装及本地账户配置"><a href="#二、Git安装及本地账户配置" class="headerlink" title="二、Git安装及本地账户配置"></a>二、Git安装及本地账户配置</h2><h3 id="1-Git安装"><a href="#1-Git安装" class="headerlink" title="1.Git安装"></a>1.Git安装</h3><ul><li>我们需要从<a href="https://www.git-scm.com/download/" target="_blank" rel="noopener">Git官网</a>下载适合版本的安装包进行安装，因为过程中没有需要注意的地方，这里不再赘诉。</li></ul><h3 id="2-Git的账户配置"><a href="#2-Git的账户配置" class="headerlink" title="2.Git的账户配置"></a>2.Git的账户配置</h3><ul><li><p>我们右击鼠标，打开<code>Git Bash</code>，输入下面两条命令进行<code>用户名</code>和<code>邮箱</code>设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"username"</span>              //引号内为GitHub用户名</span><br><span class="line">git config --global user.email useremail@example.com   //这里用GitHub的注册邮箱</span><br></pre></td></tr></table></figure></li></ul><h2 id="三、配置SSH访问Github"><a href="#三、配置SSH访问Github" class="headerlink" title="三、配置SSH访问Github"></a>三、配置SSH访问Github</h2><ul><li>这里需要你提前注册一个Github账号，方法不再赘述。</li></ul><h3 id="1-Git创建本地SSH-Key"><a href="#1-Git创建本地SSH-Key" class="headerlink" title="1.Git创建本地SSH Key"></a>1.Git创建本地SSH Key</h3><ul><li><p>右键鼠标，打开<code>Git Bash</code>，输入下面的命令创建本地SSH Key</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"useremail@example.com"</span>   //此处“C”要大写，邮箱使用GitHub注册邮箱</span><br></pre></td></tr></table></figure><p>输入后中间会提示选择生产路径以及设置密码，为了后面使用方便我们一路回车跳过即可 </p></li><li><p>创建成功之后会看见<code>The key&#39;s randomart image is:</code>这样一句话，下面会显示出一堆看不懂的图案。</p></li><li><p>之后我们打开<code>.ssh</code>文件夹中的<code>id_rsa.pub</code>文件，复制其中的所有内容，这里一定要全部复制，包括换行。</p></li></ul><h3 id="2-添加到Github"><a href="#2-添加到Github" class="headerlink" title="2.添加到Github"></a>2.添加到Github</h3><ul><li><p>登录Github，点击<code>Settings</code>—<code>SSH and GPG keys</code>—<code>New SSH key</code></p><p><img src="/imgs/sshkey.JPG" alt></p></li><li><p><code>Title</code>里的内容随便填，<code>Key</code>中粘贴之前复制的本地SSH key。</p></li></ul><h3 id="3-测试是否成功"><a href="#3-测试是否成功" class="headerlink" title="3.测试是否成功"></a>3.测试是否成功</h3><ul><li><p>打开<code>Git Bash</code>，输入下面的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>如果配置成功将会出现下面的文字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You&apos;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure></li></ul><hr><blockquote><p><a rel="noopener" href="https://creativecommons.org/licenses/by-nc-sa/3.0/cn/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/3.0/cn/88x31.png"></a><br>本<span xmlns:dct="http://purl.org/dc/terms/" href="http://purl.org/dc/dcmitype/Text" rel="dct:type">文章</span>由<a xmlns:cc="https://creativecommons.org/ns#" href="https://perry96.com" property="cc:attributionName" rel="noopener" target="_blank">Perry</a>创作，采用<a rel="noopener" href="https://creativecommons.org/licenses/by-nc-sa/3.0/cn/" target="_blank">知识共享署名-非商业性使用-相同方式共享 3.0 中国大陆许可协议</a>进行许可。凡是转载的文章，翻译的文章，或者由其他作者投稿的文章，版权归原作者所有。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、简单介绍&quot;&gt;&lt;a href=&quot;#一、简单介绍&quot; class=&quot;headerlink&quot; title=&quot;一、简单介绍&quot;&gt;&lt;/a&gt;一、简单介绍&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Git是一个开源的分布式版本控制系统，它可以很高效地进行项目版本管理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Github是一个只支持Git作为唯一版本管理工具的面向开源和私有软件项目的托管平台。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
    
    </summary>
    
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
      <category term="Github" scheme="http://yoursite.com/tags/Github/"/>
    
  </entry>
  
</feed>
